// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: communicator/unity_to_python.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace MLAgents.Communicator {
  /// <summary>
  /// This would require two separate channels ?
  /// </summary>
  public static partial class UnityToPython
  {
    static readonly string __ServiceName = "communicator.UnityToPython";

    static readonly grpc::Marshaller<global::MLAgents.Communicator.UnityInitializationOutput> __Marshaller_UnityInitializationOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MLAgents.Communicator.UnityInitializationOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MLAgents.Communicator.UnityInitializationInput> __Marshaller_UnityInitializationInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MLAgents.Communicator.UnityInitializationInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MLAgents.Communicator.UnityOutput> __Marshaller_UnityOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MLAgents.Communicator.UnityOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MLAgents.Communicator.UnityInput> __Marshaller_UnityInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MLAgents.Communicator.UnityInput.Parser.ParseFrom);

    static readonly grpc::Method<global::MLAgents.Communicator.UnityInitializationOutput, global::MLAgents.Communicator.UnityInitializationInput> __Method_Initialize = new grpc::Method<global::MLAgents.Communicator.UnityInitializationOutput, global::MLAgents.Communicator.UnityInitializationInput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Initialize",
        __Marshaller_UnityInitializationOutput,
        __Marshaller_UnityInitializationInput);

    static readonly grpc::Method<global::MLAgents.Communicator.UnityOutput, global::MLAgents.Communicator.UnityInput> __Method_Send = new grpc::Method<global::MLAgents.Communicator.UnityOutput, global::MLAgents.Communicator.UnityInput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Send",
        __Marshaller_UnityOutput,
        __Marshaller_UnityInput);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MLAgents.Communicator.UnityToPythonReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UnityToPython</summary>
    public abstract partial class UnityToPythonBase
    {
      /// <summary>
      /// Sends the academy parameters
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::MLAgents.Communicator.UnityInitializationInput> Initialize(global::MLAgents.Communicator.UnityInitializationOutput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MLAgents.Communicator.UnityInput> Send(global::MLAgents.Communicator.UnityOutput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UnityToPython</summary>
    public partial class UnityToPythonClient : grpc::ClientBase<UnityToPythonClient>
    {
      /// <summary>Creates a new client for UnityToPython</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UnityToPythonClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UnityToPython that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UnityToPythonClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UnityToPythonClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UnityToPythonClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends the academy parameters
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::MLAgents.Communicator.UnityInitializationInput Initialize(global::MLAgents.Communicator.UnityInitializationOutput request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Initialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends the academy parameters
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::MLAgents.Communicator.UnityInitializationInput Initialize(global::MLAgents.Communicator.UnityInitializationOutput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Initialize, null, options, request);
      }
      /// <summary>
      /// Sends the academy parameters
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::MLAgents.Communicator.UnityInitializationInput> InitializeAsync(global::MLAgents.Communicator.UnityInitializationOutput request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InitializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends the academy parameters
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::MLAgents.Communicator.UnityInitializationInput> InitializeAsync(global::MLAgents.Communicator.UnityInitializationOutput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Initialize, null, options, request);
      }
      public virtual global::MLAgents.Communicator.UnityInput Send(global::MLAgents.Communicator.UnityOutput request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MLAgents.Communicator.UnityInput Send(global::MLAgents.Communicator.UnityOutput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MLAgents.Communicator.UnityInput> SendAsync(global::MLAgents.Communicator.UnityOutput request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MLAgents.Communicator.UnityInput> SendAsync(global::MLAgents.Communicator.UnityOutput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Send, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UnityToPythonClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UnityToPythonClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UnityToPythonBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_Send, serviceImpl.Send).Build();
    }

  }
}
#endregion
